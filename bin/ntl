#!/usr/bin/env node
'use strict';

var Nano = require('../lib/nano')
  , nomnom = require('nomnom');

var opts = nomnom
  .option('file', {
    position: 0,
    help: 'input file',
    required: true
  })
  .option('fn', {
    flag: true,
    help: 'show the compiled function instead (--data has no effect)'
  })
  .option('data', {
    abbr: 'd',
    help: 'data object (JSON)',
    default: '{}'
  })
  .option('basedir', {
    abbr: 'b',
    help: 'base directory',
    default: process.cwd()
  })
  .option('strip', {
    abbr: 's',
    help: 'strip HTML comments',
    flag: true,
    default: false
  })
  .parse();

var nano = new Nano({
  basedir: opts.basedir,
  stripComments: opts.strip
});

if (opts.fn) {
  nano.compile(opts.file, function (err, fn) {
    if (err) {
      console.trace(err);
      process.exit(1);
    }
    process.stdout.write(fn.toString());
    process.exit(0);
  })
} else {
  var data = JSON.parse(opts.data);
  nano.render(opts.file, data, function (err, html) {
    if (err) {
      console.trace(err);
      process.exit(1);
    }
    process.stdout.write(html);
    process.exit(0);
  });

}
